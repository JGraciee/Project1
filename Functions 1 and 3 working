//ENG1003 Project 1
#include <stdio.h>


//FUNCTION PROTOTYPE FOR MENU OPTION 1: 
//FUNTION 1
void encryptRotation(char* string, int k); // function prototype for option 1

//FUNCTION 3
void decryptRotation(char* str, int k); // function prototype for option 3 decryption 


int main() {
    //int i;
    int x, k; // k = key 
    char string[100]; // declares a string of 99 characters + null 
    char str[100];
    

/******************* SELECTING AN OPTION *****************/
 //options for encryption given a text 
    printf("\nPlease choose from the following options:\n");
    printf("1 = Encrypt string using character rotation and key.\n");
    printf("2 = Encrypt string using character substitution and alphabet substitution.\n");
    printf("3 = Decrypt string using character rotation given cipher text and key.\n");
    printf("4 = Decrypt string using character substitution given cipher text and key.\n");
    scanf("%d", &x);
    


/******* ENTER A KEY AND MESSAGE TO ENCRYPT OR DECRYPT**********/
    printf("\n Enter a string in all UPPERCASE: "); //more eplicity about what a string is//... words?? sentence?? 
    scanf("%s", string);
    //IF NOT UPPERCASE SHOULD I PROMPT THEM TO REDO IT? 
    //if x == 1 or x == 2 enter a string 
    //if x == 3 or x == 4 enter a cipher text to decrypt 
    
    printf("\n Enter an integer between 0 and 25 for key: ");
    scanf("%d", &k);
    if (k < 0 || k > 25){ //uses if statement to make sure key is between 0 and 25 and prompts user to re enter a value 
        printf("Please enter an integer between 0 and 25");
    }
    
    
/**************** PRINTING THE RESULTS*****************/
    if (x == 1){
        encryptRotation(string, k); // calling a function (name (arguments)) --> dont need data types of arguments 
        printf("Encrypted string using rotation is: %s\n", string); //calls above string --> ??
    }
    //else if(x == 2){
   //  printf("Encrypted string using substitution is: %s", );// need argument for this when i write the function 
      //}
      

     if (x == 3){
        decryptRotation(string, k); // calling a function (name (arguments)) --> dont need data types of arguments 
        printf("Decrypted string using rotation is: %s\n", string);//calls above string --> ??
    }
   
return 0; 
}

   
/****************FUNCTION DEFINITIONS******************/ 
   //FUNCTION 1
   void encryptRotation(char* string, int k) {
       int i; 
       for(i = 0; (i < 100 && string[i] != '\0'); i++) {//'\0' = NULL character 
        string[i] = (string[i] + k - 65) % 26 + 65; //add key to initial string character and minus 65. 
        //Then perform a modulus on the answer and add 65 to convert it back to human readable text. 
        //minus 65 since UPPERCASE A = 65 and needs to convert it to zero to make it between 0 and 25. 
   }
}
   
   //FUNCTION 3
    void decryptRotation(char* str, int k) {
       int i; 
       for(i = 0; (i < 100 && str[i] != '\0'); i++) {// '\0' = NULL character 
        str[i] = (str[i] - k - 65 + 26) % 26 + 65;
    }
}
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   /*switch(x) // refers to option selected above 
   {
   case 1:
      for(i = 0; (i < 100 && string[i] != '\0'); i++) // Encryption is working using rotation 
        str[i] = string[i] + k; //the key for encryption is 3 that is added to ASCII value

      printf("\nEncrypted string: %s\n", string);
      break;

   case 2:
      for(i = 0; (i < 100 && string[i] != '\0'); i++) // not really sure about this decryption thing :/ 
        str[i] = str[i] - k; //the key for encryption is 3 that is subtracted to ASCII value

      printf("\nDecrypted string: %s\n", string);
      break;

   default:
      printf("\nError\n");
}*/

